/*
 * This file is generated by jOOQ.
 */
package by.anatolyloyko.ams.orm.jooq.schemas.users.routines


import by.anatolyloyko.ams.orm.jooq.schemas.users.Users

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CreateUser : AbstractRoutine<Long>("create_user", Users.USERS, SQLDataType.BIGINT) {
    companion object {

        /**
         * The parameter <code>users.create_user.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Long?> = Internal.createParameter("RETURN_VALUE", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>users.create_user.i_password</code>.
         */
        val I_PASSWORD: Parameter<String?> = Internal.createParameter("i_password", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>users.create_user.i_first_name</code>.
         */
        val I_FIRST_NAME: Parameter<String?> = Internal.createParameter("i_first_name", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>users.create_user.i_last_name</code>.
         */
        val I_LAST_NAME: Parameter<String?> = Internal.createParameter("i_last_name", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>users.create_user.i_phone_number</code>.
         */
        val I_PHONE_NUMBER: Parameter<String?> = Internal.createParameter("i_phone_number", SQLDataType.VARCHAR, false, false)
    }

    init {
        returnParameter = CreateUser.RETURN_VALUE
        addInParameter(CreateUser.I_PASSWORD)
        addInParameter(CreateUser.I_FIRST_NAME)
        addInParameter(CreateUser.I_LAST_NAME)
        addInParameter(CreateUser.I_PHONE_NUMBER)
    }

    /**
     * Set the <code>i_password</code> parameter IN value to the routine
     */
    fun setIPassword(value: String?): Unit = setValue(CreateUser.I_PASSWORD, value)

    /**
     * Set the <code>i_password</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    fun setIPassword(field: Field<String?>): Unit {
        setField(CreateUser.I_PASSWORD, field)
    }

    /**
     * Set the <code>i_first_name</code> parameter IN value to the routine
     */
    fun setIFirstName(value: String?): Unit = setValue(CreateUser.I_FIRST_NAME, value)

    /**
     * Set the <code>i_first_name</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setIFirstName(field: Field<String?>): Unit {
        setField(CreateUser.I_FIRST_NAME, field)
    }

    /**
     * Set the <code>i_last_name</code> parameter IN value to the routine
     */
    fun setILastName(value: String?): Unit = setValue(CreateUser.I_LAST_NAME, value)

    /**
     * Set the <code>i_last_name</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setILastName(field: Field<String?>): Unit {
        setField(CreateUser.I_LAST_NAME, field)
    }

    /**
     * Set the <code>i_phone_number</code> parameter IN value to the routine
     */
    fun setIPhoneNumber(value: String?): Unit = setValue(CreateUser.I_PHONE_NUMBER, value)

    /**
     * Set the <code>i_phone_number</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setIPhoneNumber(field: Field<String?>): Unit {
        setField(CreateUser.I_PHONE_NUMBER, field)
    }
}
