/*
 * This file is generated by jOOQ.
 */
package by.anatolyloyko.ams.orm.jooq.schemas.users.tables.records


import by.anatolyloyko.ams.orm.jooq.schemas.users.tables.UserPassword

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserPasswordRecord private constructor() : TableRecordImpl<UserPasswordRecord>(UserPassword.USER_PASSWORD), Record2<Long?, String?> {

    open var userId: Long
        set(value): Unit = set(0, value)
        get(): Long = get(0) as Long

    open var password: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<Long?, String?> = super.fieldsRow() as Row2<Long?, String?>
    override fun valuesRow(): Row2<Long?, String?> = super.valuesRow() as Row2<Long?, String?>
    override fun field1(): Field<Long?> = UserPassword.USER_PASSWORD.USER_ID
    override fun field2(): Field<String?> = UserPassword.USER_PASSWORD.PASSWORD
    override fun component1(): Long = userId
    override fun component2(): String = password
    override fun value1(): Long = userId
    override fun value2(): String = password

    override fun value1(value: Long?): UserPasswordRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): UserPasswordRecord {
        set(1, value)
        return this
    }

    override fun values(value1: Long?, value2: String?): UserPasswordRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised UserPasswordRecord
     */
    constructor(userId: Long, password: String): this() {
        this.userId = userId
        this.password = password
        resetChangedOnNotNull()
    }
}
