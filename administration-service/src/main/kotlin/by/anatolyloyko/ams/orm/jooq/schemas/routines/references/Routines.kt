/*
 * This file is generated by jOOQ.
 */
package by.anatolyloyko.ams.orm.jooq.schemas.routines.references


import by.anatolyloyko.ams.orm.jooq.schemas.routines.AddBrandStudios
import by.anatolyloyko.ams.orm.jooq.schemas.routines.AddUserRoles
import by.anatolyloyko.ams.orm.jooq.schemas.routines.CreateBrandRole
import by.anatolyloyko.ams.orm.jooq.schemas.routines.CreateStudioRole
import by.anatolyloyko.ams.orm.jooq.schemas.routines.DeleteUserRoles
import by.anatolyloyko.ams.orm.jooq.schemas.routines.RefreshFdwBrand
import by.anatolyloyko.ams.orm.jooq.schemas.routines.RefreshFdwStudio
import by.anatolyloyko.ams.orm.jooq.schemas.routines.RefreshFdwUser
import by.anatolyloyko.ams.orm.jooq.schemas.routines.SaveRole
import by.anatolyloyko.ams.orm.jooq.schemas.routines.SetBrandRoles
import by.anatolyloyko.ams.orm.jooq.schemas.routines.SetRolePermissions
import by.anatolyloyko.ams.orm.jooq.schemas.routines.SetStudioRoles

import org.jooq.Configuration
import org.jooq.Field



/**
 * Call <code>administration.add_brand_studios</code>
 */
fun addBrandStudios(
      configuration: Configuration
    , iBrandId: Long?
    , iStudios: Array<Long?>?
): Long? {
    val f = AddBrandStudios()
    f.setIBrandId(iBrandId)
    f.setIStudios(iStudios)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.add_brand_studios</code> as a field.
 */
fun addBrandStudios(
      iBrandId: Long?
    , iStudios: Array<Long?>?
): Field<Long?> {
    val f = AddBrandStudios()
    f.setIBrandId(iBrandId)
    f.setIStudios(iStudios)

    return f.asField()
}

/**
 * Get <code>administration.add_brand_studios</code> as a field.
 */
fun addBrandStudios(
      iBrandId: Field<Long?>
    , iStudios: Field<Array<Long?>?>
): Field<Long?> {
    val f = AddBrandStudios()
    f.setIBrandId(iBrandId)
    f.setIStudios(iStudios)

    return f.asField()
}

/**
 * Call <code>administration.add_user_roles</code>
 */
fun addUserRoles(
      configuration: Configuration
    , iUserId: Long?
    , iRoles: Array<Long?>?
): Long? {
    val f = AddUserRoles()
    f.setIUserId(iUserId)
    f.setIRoles(iRoles)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.add_user_roles</code> as a field.
 */
fun addUserRoles(
      iUserId: Long?
    , iRoles: Array<Long?>?
): Field<Long?> {
    val f = AddUserRoles()
    f.setIUserId(iUserId)
    f.setIRoles(iRoles)

    return f.asField()
}

/**
 * Get <code>administration.add_user_roles</code> as a field.
 */
fun addUserRoles(
      iUserId: Field<Long?>
    , iRoles: Field<Array<Long?>?>
): Field<Long?> {
    val f = AddUserRoles()
    f.setIUserId(iUserId)
    f.setIRoles(iRoles)

    return f.asField()
}

/**
 * Call <code>administration.create_brand_role</code>
 */
fun createBrandRole(
      configuration: Configuration
    , iBrandId: Long?
    , iName: String?
    , iDescription: String?
    , iPermissions: Array<Long?>?
): Long? {
    val f = CreateBrandRole()
    f.setIBrandId(iBrandId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.create_brand_role</code> as a field.
 */
fun createBrandRole(
      iBrandId: Long?
    , iName: String?
    , iDescription: String?
    , iPermissions: Array<Long?>?
): Field<Long?> {
    val f = CreateBrandRole()
    f.setIBrandId(iBrandId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Get <code>administration.create_brand_role</code> as a field.
 */
fun createBrandRole(
      iBrandId: Field<Long?>
    , iName: Field<String?>
    , iDescription: Field<String?>
    , iPermissions: Field<Array<Long?>?>
): Field<Long?> {
    val f = CreateBrandRole()
    f.setIBrandId(iBrandId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Call <code>administration.create_studio_role</code>
 */
fun createStudioRole(
      configuration: Configuration
    , iStudioId: Long?
    , iName: String?
    , iDescription: String?
    , iPermissions: Array<Long?>?
): Long? {
    val f = CreateStudioRole()
    f.setIStudioId(iStudioId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.create_studio_role</code> as a field.
 */
fun createStudioRole(
      iStudioId: Long?
    , iName: String?
    , iDescription: String?
    , iPermissions: Array<Long?>?
): Field<Long?> {
    val f = CreateStudioRole()
    f.setIStudioId(iStudioId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Get <code>administration.create_studio_role</code> as a field.
 */
fun createStudioRole(
      iStudioId: Field<Long?>
    , iName: Field<String?>
    , iDescription: Field<String?>
    , iPermissions: Field<Array<Long?>?>
): Field<Long?> {
    val f = CreateStudioRole()
    f.setIStudioId(iStudioId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Call <code>administration.delete_user_roles</code>
 */
fun deleteUserRoles(
      configuration: Configuration
    , iUserId: Long?
    , iRoles: Array<Long?>?
): Long? {
    val f = DeleteUserRoles()
    f.setIUserId(iUserId)
    f.setIRoles(iRoles)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.delete_user_roles</code> as a field.
 */
fun deleteUserRoles(
      iUserId: Long?
    , iRoles: Array<Long?>?
): Field<Long?> {
    val f = DeleteUserRoles()
    f.setIUserId(iUserId)
    f.setIRoles(iRoles)

    return f.asField()
}

/**
 * Get <code>administration.delete_user_roles</code> as a field.
 */
fun deleteUserRoles(
      iUserId: Field<Long?>
    , iRoles: Field<Array<Long?>?>
): Field<Long?> {
    val f = DeleteUserRoles()
    f.setIUserId(iUserId)
    f.setIRoles(iRoles)

    return f.asField()
}

/**
 * Call <code>administration.refresh_fdw_brand</code>
 */
fun refreshFdwBrand(
      configuration: Configuration
): Unit {
    val p = RefreshFdwBrand()

    p.execute(configuration)
}

/**
 * Call <code>administration.refresh_fdw_studio</code>
 */
fun refreshFdwStudio(
      configuration: Configuration
): Unit {
    val p = RefreshFdwStudio()

    p.execute(configuration)
}

/**
 * Call <code>administration.refresh_fdw_user</code>
 */
fun refreshFdwUser(
      configuration: Configuration
): Unit {
    val p = RefreshFdwUser()

    p.execute(configuration)
}

/**
 * Call <code>administration.save_role</code>
 */
fun saveRole(
      configuration: Configuration
    , iId: Long?
    , iName: String?
    , iDescription: String?
    , iPermissions: Array<Long?>?
): Long? {
    val f = SaveRole()
    f.setIId(iId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.save_role</code> as a field.
 */
fun saveRole(
      iId: Long?
    , iName: String?
    , iDescription: String?
    , iPermissions: Array<Long?>?
): Field<Long?> {
    val f = SaveRole()
    f.setIId(iId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Get <code>administration.save_role</code> as a field.
 */
fun saveRole(
      iId: Field<Long?>
    , iName: Field<String?>
    , iDescription: Field<String?>
    , iPermissions: Field<Array<Long?>?>
): Field<Long?> {
    val f = SaveRole()
    f.setIId(iId)
    f.setIName(iName)
    f.setIDescription(iDescription)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Call <code>administration.set_brand_roles</code>
 */
fun setBrandRoles(
      configuration: Configuration
    , iBrandId: Long?
    , iRoles: Array<Long?>?
): Long? {
    val f = SetBrandRoles()
    f.setIBrandId(iBrandId)
    f.setIRoles(iRoles)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.set_brand_roles</code> as a field.
 */
fun setBrandRoles(
      iBrandId: Long?
    , iRoles: Array<Long?>?
): Field<Long?> {
    val f = SetBrandRoles()
    f.setIBrandId(iBrandId)
    f.setIRoles(iRoles)

    return f.asField()
}

/**
 * Get <code>administration.set_brand_roles</code> as a field.
 */
fun setBrandRoles(
      iBrandId: Field<Long?>
    , iRoles: Field<Array<Long?>?>
): Field<Long?> {
    val f = SetBrandRoles()
    f.setIBrandId(iBrandId)
    f.setIRoles(iRoles)

    return f.asField()
}

/**
 * Call <code>administration.set_role_permissions</code>
 */
fun setRolePermissions(
      configuration: Configuration
    , iRoleId: Long?
    , iPermissions: Array<Long?>?
): Long? {
    val f = SetRolePermissions()
    f.setIRoleId(iRoleId)
    f.setIPermissions(iPermissions)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.set_role_permissions</code> as a field.
 */
fun setRolePermissions(
      iRoleId: Long?
    , iPermissions: Array<Long?>?
): Field<Long?> {
    val f = SetRolePermissions()
    f.setIRoleId(iRoleId)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Get <code>administration.set_role_permissions</code> as a field.
 */
fun setRolePermissions(
      iRoleId: Field<Long?>
    , iPermissions: Field<Array<Long?>?>
): Field<Long?> {
    val f = SetRolePermissions()
    f.setIRoleId(iRoleId)
    f.setIPermissions(iPermissions)

    return f.asField()
}

/**
 * Call <code>administration.set_studio_roles</code>
 */
fun setStudioRoles(
      configuration: Configuration
    , iStudioId: Long?
    , iRoles: Array<Long?>?
): Long? {
    val f = SetStudioRoles()
    f.setIStudioId(iStudioId)
    f.setIRoles(iRoles)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>administration.set_studio_roles</code> as a field.
 */
fun setStudioRoles(
      iStudioId: Long?
    , iRoles: Array<Long?>?
): Field<Long?> {
    val f = SetStudioRoles()
    f.setIStudioId(iStudioId)
    f.setIRoles(iRoles)

    return f.asField()
}

/**
 * Get <code>administration.set_studio_roles</code> as a field.
 */
fun setStudioRoles(
      iStudioId: Field<Long?>
    , iRoles: Field<Array<Long?>?>
): Field<Long?> {
    val f = SetStudioRoles()
    f.setIStudioId(iStudioId)
    f.setIRoles(iRoles)

    return f.asField()
}
