/*
 * This file is generated by jOOQ.
 */
package by.anatolyloyko.ams.orm.jooq.schemas.administration


import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.Brand
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.BrandRoles
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.BrandStudios
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.Permission
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.Role
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.RolePermissions
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.Studio
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.StudioRoles
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.User
import by.anatolyloyko.ams.orm.jooq.schemas.administration.tables.UserRoles

import kotlin.collections.List

import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Administration : SchemaImpl("administration", null) {
    companion object {

        /**
         * The reference instance of <code>administration</code>
         */
        val ADMINISTRATION: Administration = Administration()
    }

    /**
     * The table <code>administration.brand</code>.
     */
    val BRAND: Brand get() = Brand.BRAND

    /**
     * The table <code>administration.brand_roles</code>.
     */
    val BRAND_ROLES: BrandRoles get() = BrandRoles.BRAND_ROLES

    /**
     * The table <code>administration.brand_studios</code>.
     */
    val BRAND_STUDIOS: BrandStudios get() = BrandStudios.BRAND_STUDIOS

    /**
     * The table <code>administration.permission</code>.
     */
    val PERMISSION: Permission get() = Permission.PERMISSION

    /**
     * The table <code>administration.role</code>.
     */
    val ROLE: Role get() = Role.ROLE

    /**
     * The table <code>administration.role_permissions</code>.
     */
    val ROLE_PERMISSIONS: RolePermissions get() = RolePermissions.ROLE_PERMISSIONS

    /**
     * The table <code>administration.studio</code>.
     */
    val STUDIO: Studio get() = Studio.STUDIO

    /**
     * The table <code>administration.studio_roles</code>.
     */
    val STUDIO_ROLES: StudioRoles get() = StudioRoles.STUDIO_ROLES

    /**
     * The table <code>administration.user</code>.
     */
    val USER: User get() = User.USER

    /**
     * The table <code>administration.user_roles</code>.
     */
    val USER_ROLES: UserRoles get() = UserRoles.USER_ROLES

    override fun getTables(): List<Table<*>> = listOf(
        Brand.BRAND,
        BrandRoles.BRAND_ROLES,
        BrandStudios.BRAND_STUDIOS,
        Permission.PERMISSION,
        Role.ROLE,
        RolePermissions.ROLE_PERMISSIONS,
        Studio.STUDIO,
        StudioRoles.STUDIO_ROLES,
        User.USER,
        UserRoles.USER_ROLES
    )
}
