/*
 * This file is generated by jOOQ.
 */
package by.anatolyloyko.ams.orm.jooq.schemas.administration.routines


import by.anatolyloyko.ams.orm.jooq.schemas.administration.Administration

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CreateBrandRole : AbstractRoutine<Long>("create_brand_role", Administration.ADMINISTRATION, SQLDataType.BIGINT) {
    companion object {

        /**
         * The parameter
         * <code>administration.create_brand_role.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Long?> = Internal.createParameter("RETURN_VALUE", SQLDataType.BIGINT, false, false)

        /**
         * The parameter
         * <code>administration.create_brand_role.i_brand_id</code>.
         */
        val I_BRAND_ID: Parameter<Long?> = Internal.createParameter("i_brand_id", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>administration.create_brand_role.i_name</code>.
         */
        val I_NAME: Parameter<String?> = Internal.createParameter("i_name", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter
         * <code>administration.create_brand_role.i_description</code>.
         */
        val I_DESCRIPTION: Parameter<String?> = Internal.createParameter("i_description", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter
         * <code>administration.create_brand_role.i_permissions</code>.
         */
        val I_PERMISSIONS: Parameter<Array<Long?>?> = Internal.createParameter("i_permissions", SQLDataType.BIGINT.array(), false, false)
    }

    init {
        returnParameter = CreateBrandRole.RETURN_VALUE
        addInParameter(CreateBrandRole.I_BRAND_ID)
        addInParameter(CreateBrandRole.I_NAME)
        addInParameter(CreateBrandRole.I_DESCRIPTION)
        addInParameter(CreateBrandRole.I_PERMISSIONS)
    }

    /**
     * Set the <code>i_brand_id</code> parameter IN value to the routine
     */
    fun setIBrandId(value: Long?): Unit = setValue(CreateBrandRole.I_BRAND_ID, value)

    /**
     * Set the <code>i_brand_id</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    fun setIBrandId(field: Field<Long?>): Unit {
        setField(CreateBrandRole.I_BRAND_ID, field)
    }

    /**
     * Set the <code>i_name</code> parameter IN value to the routine
     */
    fun setIName(value: String?): Unit = setValue(CreateBrandRole.I_NAME, value)

    /**
     * Set the <code>i_name</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setIName(field: Field<String?>): Unit {
        setField(CreateBrandRole.I_NAME, field)
    }

    /**
     * Set the <code>i_description</code> parameter IN value to the routine
     */
    fun setIDescription(value: String?): Unit = setValue(CreateBrandRole.I_DESCRIPTION, value)

    /**
     * Set the <code>i_description</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setIDescription(field: Field<String?>): Unit {
        setField(CreateBrandRole.I_DESCRIPTION, field)
    }

    /**
     * Set the <code>i_permissions</code> parameter IN value to the routine
     */
    fun setIPermissions(value: Array<Long?>?): Unit = setValue(CreateBrandRole.I_PERMISSIONS, value)

    /**
     * Set the <code>i_permissions</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setIPermissions(field: Field<Array<Long?>?>): Unit {
        setField(CreateBrandRole.I_PERMISSIONS, field)
    }
}
