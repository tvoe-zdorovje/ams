/*
 * This file is generated by jOOQ.
 */
package by.anatolyloyko.ams.orm.jooq.schemas.routines


import by.anatolyloyko.ams.orm.jooq.schemas.Appointments

import java.util.UUID

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CreateAppointment : AbstractRoutine<UUID>("create_appointment", Appointments.APPOINTMENTS, SQLDataType.UUID) {
    companion object {

        /**
         * The parameter
         * <code>appointments.create_appointment.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<UUID?> = Internal.createParameter("RETURN_VALUE", SQLDataType.UUID, false, false)

        /**
         * The parameter
         * <code>appointments.create_appointment.i_description</code>.
         */
        val I_DESCRIPTION: Parameter<String?> = Internal.createParameter("i_description", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter
         * <code>appointments.create_appointment.i_client_user_id</code>.
         */
        val I_CLIENT_USER_ID: Parameter<Long?> = Internal.createParameter("i_client_user_id", SQLDataType.BIGINT, false, false)

        /**
         * The parameter
         * <code>appointments.create_appointment.i_master_user_id</code>.
         */
        val I_MASTER_USER_ID: Parameter<Long?> = Internal.createParameter("i_master_user_id", SQLDataType.BIGINT, false, false)

        /**
         * The parameter
         * <code>appointments.create_appointment.i_manager_user_id</code>.
         */
        val I_MANAGER_USER_ID: Parameter<Long?> = Internal.createParameter("i_manager_user_id", SQLDataType.BIGINT, false, false)

        /**
         * The parameter
         * <code>appointments.create_appointment.i_studio_id</code>.
         */
        val I_STUDIO_ID: Parameter<Long?> = Internal.createParameter("i_studio_id", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>appointments.create_appointment.i_comment</code>.
         */
        val I_COMMENT: Parameter<String?> = Internal.createParameter("i_comment", SQLDataType.VARCHAR, false, false)
    }

    init {
        returnParameter = CreateAppointment.RETURN_VALUE
        addInParameter(CreateAppointment.I_DESCRIPTION)
        addInParameter(CreateAppointment.I_CLIENT_USER_ID)
        addInParameter(CreateAppointment.I_MASTER_USER_ID)
        addInParameter(CreateAppointment.I_MANAGER_USER_ID)
        addInParameter(CreateAppointment.I_STUDIO_ID)
        addInParameter(CreateAppointment.I_COMMENT)
    }

    /**
     * Set the <code>i_description</code> parameter IN value to the routine
     */
    fun setIDescription(value: String?): Unit = setValue(CreateAppointment.I_DESCRIPTION, value)

    /**
     * Set the <code>i_description</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setIDescription(field: Field<String?>): Unit {
        setField(CreateAppointment.I_DESCRIPTION, field)
    }

    /**
     * Set the <code>i_client_user_id</code> parameter IN value to the routine
     */
    fun setIClientUserId(value: Long?): Unit = setValue(CreateAppointment.I_CLIENT_USER_ID, value)

    /**
     * Set the <code>i_client_user_id</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    fun setIClientUserId(field: Field<Long?>): Unit {
        setField(CreateAppointment.I_CLIENT_USER_ID, field)
    }

    /**
     * Set the <code>i_master_user_id</code> parameter IN value to the routine
     */
    fun setIMasterUserId(value: Long?): Unit = setValue(CreateAppointment.I_MASTER_USER_ID, value)

    /**
     * Set the <code>i_master_user_id</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    fun setIMasterUserId(field: Field<Long?>): Unit {
        setField(CreateAppointment.I_MASTER_USER_ID, field)
    }

    /**
     * Set the <code>i_manager_user_id</code> parameter IN value to the routine
     */
    fun setIManagerUserId(value: Long?): Unit = setValue(CreateAppointment.I_MANAGER_USER_ID, value)

    /**
     * Set the <code>i_manager_user_id</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    fun setIManagerUserId(field: Field<Long?>): Unit {
        setField(CreateAppointment.I_MANAGER_USER_ID, field)
    }

    /**
     * Set the <code>i_studio_id</code> parameter IN value to the routine
     */
    fun setIStudioId(value: Long?): Unit = setValue(CreateAppointment.I_STUDIO_ID, value)

    /**
     * Set the <code>i_studio_id</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setIStudioId(field: Field<Long?>): Unit {
        setField(CreateAppointment.I_STUDIO_ID, field)
    }

    /**
     * Set the <code>i_comment</code> parameter IN value to the routine
     */
    fun setIComment(value: String?): Unit = setValue(CreateAppointment.I_COMMENT, value)

    /**
     * Set the <code>i_comment</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    fun setIComment(field: Field<String?>): Unit {
        setField(CreateAppointment.I_COMMENT, field)
    }
}
