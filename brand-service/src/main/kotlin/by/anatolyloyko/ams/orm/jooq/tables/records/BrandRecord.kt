/*
 * This file is generated by jOOQ.
 */
package by.anatolyloyko.ams.orm.jooq.tables.records


import by.anatolyloyko.ams.orm.jooq.tables.Brand

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BrandRecord private constructor() : UpdatableRecordImpl<BrandRecord>(Brand.BRAND) {

    open var id: Long
        set(value): Unit = set(0, value)
        get(): Long = get(0) as Long

    open var name: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var description: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised BrandRecord
     */
    constructor(id: Long, name: String, description: String): this() {
        this.id = id
        this.name = name
        this.description = description
        resetChangedOnNotNull()
    }
}
