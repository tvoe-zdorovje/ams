services:
  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    container_name: gateway
    restart: no
    ports:
      - "4000:4000"
    volumes:
      - ./gateway/apollo/router/router.yaml:/dist/config/router.yaml
      - ./gateway/apollo/router/supergraph-config.yaml:/tmp/app/supergraph-config.yaml
      - ./gateway/apollo/router/plugin/:/tmp/app/plugin/
      - ./graphql:/tmp/app/schemas/service
    env_file:
      - user-service/.env

  user_db:
    build:
      context: postgres
      dockerfile: postgres.Dockerfile
    container_name: user_db
    restart: always
    ports:
        - "5441:5432"
    volumes:
      - user_db_volume:/var/lib/postgresql/data
      - ./user-service/database/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    env_file:
      - user-service/.env

  liquibase_user_db:
    build:
      context: postgres
      dockerfile: liquibase.Dockerfile
    container_name: liquibase_user_db
    restart: on-failure
    env_file:
      - user-service/.env
    depends_on:
      - user_db
    volumes:
      - ./user-service/database/changelog:/liquibase/changelog
      - ./user-service/database/test:/liquibase/tests
      - ./postgres/test/_util:/liquibase/tests/_util

  user-service:
    build:
      context: user-service
      dockerfile: Dockerfile
    container_name: user-service
    depends_on:
      - liquibase_user_db
    ports:
      - "8081:8080"
    volumes:
      - ./user-service/build/libs/user-service.war:/var/lib/jetty/webapps/ROOT.war
    env_file:
      - user-service/.env

  brand_db:
    build:
      context: postgres
      dockerfile: postgres.Dockerfile
    container_name: brand_db
    restart: always
    ports:
      - "5442:5432"
    volumes:
      - brand_db_volume:/var/lib/postgresql/data
      - ./brand-service/database/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    env_file:
      - brand-service/.env

  liquibase_brand_db:
    build:
      context: postgres
      dockerfile: liquibase.Dockerfile
    container_name: liquibase_brand_db
    restart: on-failure
    env_file:
      - brand-service/.env
    depends_on:
      - brand_db
    volumes:
      - ./brand-service/database/changelog:/liquibase/changelog
      - ./brand-service/database/test:/liquibase/tests
      - ./postgres/test/_util:/liquibase/tests/_util

  brand-service:
    image: jetty:11-jdk17-alpine-eclipse-temurin
    container_name: brand-service
    depends_on:
      - liquibase_brand_db
    ports:
      - "8082:8080"
    volumes:
      - ./brand-service/build/libs/brand-service.war:/var/lib/jetty/webapps/ROOT.war
    env_file:
      - brand-service/.env

  studio_db:
    build:
      context: postgres
      dockerfile: postgres.Dockerfile
    container_name: studio_db
    restart: always
    ports:
      - "5443:5432"
    volumes:
      - studio_db_volume:/var/lib/postgresql/data
      - ./studio-service/database/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    env_file:
      - studio-service/.env

  liquibase_studio_db:
    build:
      context: postgres
      dockerfile: liquibase.Dockerfile
    container_name: liquibase_studio_db
    restart: on-failure
    env_file:
      - studio-service/.env
    depends_on:
      - studio_db
    volumes:
      - ./studio-service/database/changelog:/liquibase/changelog
      - ./studio-service/database/test:/liquibase/tests
      - ./postgres/test/_util:/liquibase/tests/_util
  
  studio-service:
    image: jetty:11-jdk17-alpine-eclipse-temurin
    container_name: studio-service
    depends_on:
      - liquibase_studio_db
    ports:
      - "8083:8080"
    volumes:
      - ./studio-service/build/libs/studio-service.war:/var/lib/jetty/webapps/ROOT.war
    env_file:
      - studio-service/.env

  administration_db:
    build:
      context: postgres
      dockerfile: postgres.Dockerfile
    container_name: administration_db
    restart: always
    ports:
      - "5444:5432"
    depends_on:
      - user_db
      - liquibase_user_db
      - brand_db
      - liquibase_brand_db
      - studio_db
      - liquibase_studio_db
    volumes:
      - administration_db_volume:/var/lib/postgresql/data
      - ./administration-service/database/init_db.sql:/docker-entrypoint-initdb.d/init_administration_db.sql
      - ./appointment-service/database/init_db.sql:/docker-entrypoint-initdb.d/init_appointment_db.sql
    env_file:
      - administration-service/.env

  liquibase_administration_db:
    build:
      context: postgres
      dockerfile: liquibase.Dockerfile
    container_name: liquibase_administration_db
    restart: on-failure
    env_file:
      - administration-service/.env
    depends_on:
      - administration_db
    volumes:
      - ./administration-service/database/changelog:/liquibase/changelog
      - ./administration-service/database/test:/liquibase/tests
      - ./postgres/test/_util:/liquibase/tests/_util

  liquibase_appointment_db:
    build:
      context: postgres
      dockerfile: liquibase.Dockerfile
    container_name: liquibase_appointment_db
    restart: on-failure
    env_file:
      - appointment-service/.env
    depends_on:
      - administration_db
    volumes:
      - ./appointment-service/database/changelog:/liquibase/changelog
      - ./appointment-service/database/test:/liquibase/tests
      - ./postgres/test/_util:/liquibase/tests/_util

  administration-service:
    image: jetty:11-jdk17-alpine-eclipse-temurin
    container_name: administration-service
    depends_on:
      - liquibase_administration_db
    ports:
      - "8084:8080"
    volumes:
      - ./administration-service/build/libs/administration-service.war:/var/lib/jetty/webapps/ROOT.war
    env_file:
      - administration-service/.env
  
  appointment-service:
    image: jetty:11-jdk17-alpine-eclipse-temurin
    container_name: appointment-service
    depends_on:
      - liquibase_appointment_db
    ports:
      - "8085:8080"
    volumes:
      - ./appointment-service/build/libs/appointment-service.war:/var/lib/jetty/webapps/ROOT.war
    env_file:
      - appointment-service/.env

  auth-service:
    build:
      context: user-service
      dockerfile: Dockerfile
    container_name: auth-service
    depends_on:
      - liquibase_user_db
      - liquibase_administration_db
    ports:
      - "8086:8080"
    volumes:
      - ./auth-service/build/libs/auth-service.war:/var/lib/jetty/webapps/ROOT.war
    env_file:
      - auth-service/.env

volumes:
  user_db_volume:
  brand_db_volume:
  studio_db_volume:
  administration_db_volume:
